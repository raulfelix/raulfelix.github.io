---
layout: post
title: { "babel" : "*1.2.3" }
subtitle: The best way to control your package versions
---

## Having control of your node package versions is important but sometimes becomes a bit of an after thought when you are more focussed on getting up an running.

Perhaps this is because of how simple it is to get started with node modules needing only a short command such as ```npm install react --save``` to get you started.

It kinda makes you feel...

![A baby boss]({{ site.url }}/assets/images/babel-image1.jpg)

Usually however, libraries change and they can do so very quickly. We are all busy people and often can fail to keep up with the changes which can include new features, more dependencies or breaking changes.

## Lets do things better

By default you get this in your package.json which says “give me all major 
updates and patches - i'm cool with that”. This might mean upgrading to
version 0.16.3 which could be a good or bad thing.

{% highlight json %}
{
  "react" : "^0.15.1"
}
{% endhighlight %}

To avoid that sort of trouble take back control of what happens when you 
install packages and use this which says “give me any patch for react but 
don’t upgrade the version”.

{% highlight json %}
{
  "react" : "0.15.*"
}
{% endhighlight %}

This is a much better approach where you are in full control of what changes and when.